REST和6个限制：
1.客户端服务端： 服务端负责数据存储更简单，客户端负责页面渲染具有可扩展性
2.无状态： 所有用户会话信息保存至客户端，请求需要包括所有信息，不能依赖上下文
        服务端不要保持会话信息，提升了可靠性，简单性，接口更加透明
3.缓存：所有服务端的响应都要被标为可缓存或不可缓存
        js、css静态文件缓存
        减少前后端的交互
4.统一接口：接口设计统一通用，接口与实现解耦，前后端独立开发迭代
5.分层系统：软件架构分层，每一层只知道相邻的一层，客户端不知道是和代理还是真实服务器通信
          安全层、负载均衡、缓存层等
6.按需代码（可选）：客户端可以下载运行服务端传来的代码，简化客户端

RESTful API:
实例：github
基本的URI：以资源为导向
标准HTTP方法： PATCH部分更新，PUT整体替换
传输的数据媒体类型，JSON,XML

GET /users
GET /users/12
DELETE